declare class NPC extends Mob
{
    constructor();
    null : boolean;
    valid : boolean;
    Signal(id : number) : void;
    CheckNPCFactionAlly(faction : number) : number;
    AddItem(item_id : number, charges : number, equip? : boolean, aug1? : number, aug2? : number, aug3? : number, aug4? : number, aug5? : number, aug6? : number) : void;
    AddLootTable(id? : number) : void;
    RemoveItem(item_id : number, quantity? : number, slot? : number) : void;
    ClearItemList() : void;
    AddCash(copper : number, silver : number, gold : number, platinum : number) : void;
    RemoveCash() : void;
    CountLoot() : number;
    GetLoottableID() : number;
    GetCopper() : number;
    GetSilver() : number;
    GetGold() : number;
    GetPlatinum() : number;
    SetCopper(amt : number) : void;
    SetSilver(amt : number) : void;
    SetGold(amt : number) : void;
    SetPlatinum(amt : number) : void;
    SetGrid(grid : number) : void;
    SetSaveWaypoint(wp : number) : void;
    SetSp2(sg2 : number) : void;
    GetWaypointMax() : number;
    GetGrid() : number;
    GetSp2() : number;
    GetNPCFactionID() : number;
    GetPrimaryFaction() : number;
    GetNPCHate(ent : Mob) : number;
    IsOnHatelist(ent : Mob) : boolean;
    SetNPCFactionID(id : number) : void;
    GetMaxDMG() : number;
    GetMinDMG() : number;
    IsAnimal() : boolean;
    GetPetSpellID() : number;
    SetPetSpellID(id : number) : void;
    GetMaxDamage(level : number) : number;
    SetTaunting(t : boolean) : void;
    IsTaunting() : boolean;
    PickPocket(thief : Client) : void;
    StartSwarmTimer(duration : number) : void;
    DoClassAttacks(target : Mob) : void;
    GetMaxWp() : number;
    DisplayWaypointInfo(to : Client) : void;
    CalculateNewWaypoint() : void;
    AssignWaypoints(grid : number) : void;
    SetWaypointPause() : void;
    UpdateWaypoint(wp : number) : void;
    StopWandering() : void;
    ResumeWandering() : void;
    PauseWandering(pause_time : number) : void;
    MoveTo(x : number, y : number, z : number, h : number, save : boolean) : void;
    NextGuardPosition() : void;
    SaveGuardSpot(x : number, y : number, z : number, heading : number) : void;
    IsGuarding() : boolean;
    AI_SetRoambox(dist : number, max_x : number, min_x : number, max_y : number, min_y : number, delay? : number, mindelay? : number) : void;
    SetFollowID(id : number) : void;
    SetFollowDistance(dist : number) : void;
    SetFollowCanRun(v : boolean) : void;
    GetFollowID() : number;
    GetFollowDistance() : number;
    GetFollowCanRun() : boolean;
    GetNPCSpellsID() : number;
    GetSpawnPointID() : number;
    GetSpawnPointX() : number;
    GetSpawnPointY() : number;
    GetSpawnPointZ() : number;
    GetSpawnPointH() : number;
    GetGuardPointX() : number;
    GetGuardPointY() : number;
    GetGuardPointZ() : number;
    SetPrimSkill(skill_id : number) : void;
    SetSecSkill(skill_id : number) : void;
    GetPrimSkill() : number;
    GetSecSkill() : number;
    GetSwarmOwner() : number;
    GetSwarmTarget() : number;
    SetSwarmTarget(target : number) : void;
    ModifyNPCStat(stat : string, value : string) : void;
    AddAISpell(priority : number, spell_id : number, type : number, mana_cost : number, recast_delay : number, resist_adjust : number, min_hp? : number, max_hp? : number) : void;
    RemoveAISpell(spell_id : number) : void;
    SetSpellFocusDMG(focus : number) : void;
    SetSpellFocusHeal(focus : number) : void;
    GetSpellFocusDMG() : number;
    GetSpellFocusHeal() : number;
    GetSlowMitigation() : number;
    GetAttackSpeed() : number;
    GetAttackDelay() : number;
    GetAccuracyRating() : number;
    GetSpawnKillCount() : number;
    GetScore() : number;
    MerchantOpenShop() : void;
    MerchantCloseShop() : void;
    GetRawAC() : number;
    GetAvoidanceRating() : number;
    SetSimpleRoamBox(box_size : number, move_distance? : number, move_delay? : number) : void;
    RecalculateSkills() : void;
}